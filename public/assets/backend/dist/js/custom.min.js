$(function () {
    "use strict";
    feather.replace(),
        $(".preloader").fadeOut(),
        $(".left-sidebar").hover(
            function () {
                $(".navbar-header").addClass("expand-logo");
            },
            function () {
                $(".navbar-header").removeClass("expand-logo");
            }
        ),
        $(".nav-toggler").on("click", function () {
            $("#main-wrapper").toggleClass("show-sidebar"),
                $(".nav-toggler i").toggleClass("ri-menu-2-line");
        }),
        $(".nav-lock").on("click", function () {
            $("body").toggleClass("lock-nav"),
                $(".nav-lock i").toggleClass("mdi-toggle-switch-off"),
                $("body, .page-wrapper").trigger("resize");
        }),
        $(".search-box a, .search-box .app-search .srh-btn").on(
            "click",
            function () {
                $(".app-search").toggle(200), $(".app-search input").focus();
            }
        ),
        $(function () {
            $(".service-panel-toggle").on("click", function () {
                $(".customizer").toggleClass("show-service-panel");
            }),
                $(".page-wrapper").on("click", function () {
                    $(".customizer").removeClass("show-service-panel");
                });
        }),
        $(function () {
            $(".nav-sidebar").on("click", function () {
                $(".nav-customizer").toggleClass("show-nav-sidebar");
            }),
                $(".page-wrapper").on("click", function () {
                    $(".nav-customizer").removeClass("show-nav-sidebar");
                });
        }),
        $(".increase").on("click", function () {
            var e = $(".counter").val();
            e++, $(".counter").val(e);
        }),
        $(".decrease").on("click", function () {
            var e = $(".counter")
                .val()
                .replace(/[^0-9\.]/g, "");
            e--, $(".counter").val(Math.abs(e));
        }),
        $(".floating-labels .form-control")
            .on("focus blur", function (e) {
                $(this)
                    .parents(".form-group")
                    .toggleClass(
                        "focused",
                        "focus" === e.type || 0 < this.value.length
                    );
            })
            .trigger("blur"),
        $(function () {
            [].slice
                .call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
                .map(function (e) {
                    return new bootstrap.Tooltip(e);
                });
        }),
        $(function () {
            [].slice
                .call(document.querySelectorAll('[data-bs-toggle="popover"]'))
                .map(function (e) {
                    return new bootstrap.Popover(e);
                });
        }),
        $(".message-center, .customizer-body, .scrollable").perfectScrollbar({
            wheelPropagation: !0,
        }),
        $("body, .page-wrapper").trigger("resize"),
        $(".page-wrapper").delay(20).show(),
        $(".list-task li label").click(function () {
            $(this).toggleClass("task-done");
        }),
        $('a[data-action="collapse"]').on("click", function (e) {
            e.preventDefault(),
                $(this)
                    .closest(".card")
                    .find('[data-action="collapse"] i')
                    .toggleClass("ri-subtract-line ri-add-line"),
                $(this)
                    .closest(".card")
                    .children(".card-body")
                    .collapse("toggle");
        }),
        $('a[data-action="expand"]').on("click", function (e) {
            e.preventDefault(),
                $(this)
                    .closest(".card")
                    .find('[data-action="expand"] i')
                    .toggleClass("ri-fullscreen-line ri-fullscreen-exit-line"),
                $(this).closest(".card").toggleClass("card-fullscreen");
        }),
        $('a[data-action="close"]').on("click", function () {
            $(this).closest(".card").removeClass().slideUp("fast");
        }),
        $(".mega-dropdown").on("click", function (e) {
            e.stopPropagation();
        }),
        $("#monthchart").sparkline([5, 6, 2, 9, 4, 7, 10, 12], {
            type: "bar",
            height: "35",
            barWidth: "4",
            resize: !0,
            barSpacing: "4",
            barColor: "#1e88e5",
        }),
        $("#lastmonthchart").sparkline([5, 6, 2, 9, 4, 7, 10, 12], {
            type: "bar",
            height: "35",
            barWidth: "4",
            resize: !0,
            barSpacing: "4",
            barColor: "#7460ee",
        }),
        $(".show-left-part").on("click", function () {
            $(".left-part").toggleClass("show-panel"),
                $(".show-left-part").toggleClass("ri-menu-2-line");
        }),
        $(".custom-file-input").on("change", function () {
            var e = $(this).val();
            $(this).next(".custom-file-label").html(e);
        });
});




// document.addEventListener('DOMContentLoaded', function() {
        //     const headingCheckbox = document.querySelector('.heading-checkbox');
        //     const allCheckboxes = document.querySelectorAll('.form-check-input:not(.heading-checkbox)');

        //     headingCheckbox.addEventListener('change', function() {
        //         allCheckboxes.forEach(checkbox => {
        //             checkbox.checked = headingCheckbox.checked;
        //         });
        //     });

        //     allCheckboxes.forEach(checkbox => {
        //         checkbox.addEventListener('change', function() {
        //             headingCheckbox.checked = Array.from(allCheckboxes).every(cb => cb.checked);
        //         });
        //     });
        // });


        document.addEventListener('DOMContentLoaded', function() {
            const mainCheckbox = document.querySelector('.heading-checkbox');
            const fieldCheckboxes = document.querySelectorAll('.field-checkbox');
            mainCheckbox.addEventListener('change', function() {
                fieldCheckboxes.forEach(checkbox => {
                    checkbox.checked = mainCheckbox.checked;
                    toggleFields(checkbox, mainCheckbox.checked);
                });
            });

            fieldCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('click', function() {
                    toggleFields(checkbox, checkbox.checked);
                    console.log(`Field checkbox ${index + 1} state changed:`, checkbox.checked);
                });
            });

            function toggleFields(checkbox, isChecked) {
                const row = checkbox.closest('.label-1');
                const inputs = row.querySelectorAll('input:not(.field-checkbox), select');
                inputs.forEach(input => {
                    input.disabled = !isChecked;
                });
            }
        });


document.addEventListener('DOMContentLoaded', function() {
    const mainCheckbox = document.querySelector('.cctv-checkbox');
    const fieldCheckboxes = document.querySelectorAll('.cctv_field-checkbox');
    mainCheckbox.addEventListener('change', function() {
        fieldCheckboxes.forEach(checkbox => {
            checkbox.checked = mainCheckbox.checked;
            toggleFields(checkbox, mainCheckbox.checked);
        });
    });

    fieldCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('click', function() {
            toggleFields(checkbox, checkbox.checked);
            console.log(`Field checkbox ${index + 1} state changed:`, checkbox.checked);
        });
    });

    function toggleFields(checkbox, isChecked) {
        const row = checkbox.closest('.label-2');
        const inputs = row.querySelectorAll('input:not(.cctv_field-checkbox), select');
        inputs.forEach(input => {
            input.disabled = !isChecked;
        });
    }
});
// FOR SOUND SYSTEM 
document.addEventListener('DOMContentLoaded', function() {
    const mainCheckbox = document.querySelector('.sound-checkbox');
    const fieldCheckboxes = document.querySelectorAll('.sound_field-checkbox');
    mainCheckbox.addEventListener('change', function() {
        fieldCheckboxes.forEach(checkbox => {
            checkbox.checked = mainCheckbox.checked;
            toggleFields(checkbox, mainCheckbox.checked);
        });
    });

    fieldCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('click', function() {
            toggleFields(checkbox, checkbox.checked);
            console.log(`Field checkbox ${index + 1} state changed:`, checkbox.checked);
        });
    });

    function toggleFields(checkbox, isChecked) {
        const row = checkbox.closest('.label-2');
        const inputs = row.querySelectorAll('input:not(.sound_field-checkbox), select');
        inputs.forEach(input => {
            input.disabled = !isChecked;
        });
    }
});
// for IT HARDWARE ^*_*^
document.addEventListener('DOMContentLoaded', function() {
    const mainCheckbox = document.querySelector('.it-checkbox');
    const fieldCheckboxes = document.querySelectorAll('.it_field-checkbox');
    mainCheckbox.addEventListener('change', function() {
        fieldCheckboxes.forEach(checkbox => {
            checkbox.checked = mainCheckbox.checked;
            toggleFields(checkbox, mainCheckbox.checked);
        });
    });

    fieldCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('click', function() {
            toggleFields(checkbox, checkbox.checked);
            console.log(`Field checkbox ${index + 1} state changed:`, checkbox.checked);
        });
    });

    function toggleFields(checkbox, isChecked) {
        const row = checkbox.closest('.label-2');
        const inputs = row.querySelectorAll('input:not(.it_field-checkbox), select');
        inputs.forEach(input => {
            input.disabled = !isChecked;
        });
    }
});

// for Networking #_#
document.addEventListener('DOMContentLoaded', function() {
    const mainCheckbox = document.querySelector('.network-checkbox');
    const fieldCheckboxes = document.querySelectorAll('.network_field-checkbox');
    mainCheckbox.addEventListener('change', function() {
        fieldCheckboxes.forEach(checkbox => {
            checkbox.checked = mainCheckbox.checked;
            toggleFields(checkbox, mainCheckbox.checked);
        });
    });

    fieldCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('click', function() {
            toggleFields(checkbox, checkbox.checked);
            console.log(`Field checkbox ${index + 1} state changed:`, checkbox.checked);
        });
    });

    function toggleFields(checkbox, isChecked) {
        const row = checkbox.closest('.label-2');
        const inputs = row.querySelectorAll('input:not(.network_field-checkbox), select');
        inputs.forEach(input => {
            input.disabled = !isChecked;
        });
    }
});
// for software ^_^

document.addEventListener('DOMContentLoaded', function() {
    const mainCheckbox = document.querySelector('.software-checkbox');
    const fieldCheckboxes = document.querySelectorAll('.software_field-checkbox');
    mainCheckbox.addEventListener('change', function() {
        fieldCheckboxes.forEach(checkbox => {
            checkbox.checked = mainCheckbox.checked;
            toggleFields(checkbox, mainCheckbox.checked);
        });
    });

    fieldCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('click', function() {
            toggleFields(checkbox, checkbox.checked);
            console.log(`Field checkbox ${index + 1} state changed:`, checkbox.checked);
        });
    });

    function toggleFields(checkbox, isChecked) {
        const row = checkbox.closest('.label-2');
        const inputs = row.querySelectorAll('input:not(.software_field-checkbox), select');
        inputs.forEach(input => {
            input.disabled = !isChecked;
        });
    }
});
//  for Lised Line (.^.)

document.addEventListener('DOMContentLoaded', function() {
    const mainCheckbox = document.querySelector('.lised-checkbox');
    const fieldCheckboxes = document.querySelectorAll('.lised_field-checkbox');
    mainCheckbox.addEventListener('change', function() {
        fieldCheckboxes.forEach(checkbox => {
            checkbox.checked = mainCheckbox.checked;
            toggleFields(checkbox, mainCheckbox.checked);
        });
    });

    fieldCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('click', function() {
            toggleFields(checkbox, checkbox.checked);
            console.log(`Field checkbox ${index + 1} state changed:`, checkbox.checked);
        });
    });

    function toggleFields(checkbox, isChecked) {
        const row = checkbox.closest('.label-2');
        const inputs = row.querySelectorAll('input:not(.lised_field-checkbox), select');
        inputs.forEach(input => {
            input.disabled = !isChecked;
        });
    }
});


// for brodband
document.addEventListener('DOMContentLoaded', function() {
    const mainCheckbox = document.querySelector('.brodband-checkbox');
    const fieldCheckboxes = document.querySelectorAll('.brodband_field-checkbox');
    mainCheckbox.addEventListener('change', function() {
        fieldCheckboxes.forEach(checkbox => {
            checkbox.checked = mainCheckbox.checked;
            toggleFields(checkbox, mainCheckbox.checked);
        });
    });

    fieldCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('click', function() {
            toggleFields(checkbox, checkbox.checked);
            console.log(`Field checkbox ${index + 1} state changed:`, checkbox.checked);
        });
    });

    function toggleFields(checkbox, isChecked) {
        const row = checkbox.closest('.label-2');
        const inputs = row.querySelectorAll('input:not(.brodband_field-checkbox), select');
        inputs.forEach(input => {
            input.disabled = !isChecked;
        });
    }
});


// for Cable TV (^-^)
document.addEventListener('DOMContentLoaded', function() {
    const mainCheckbox = document.querySelector('.cable-checkbox');
    const fieldCheckboxes = document.querySelectorAll('.cable_field-checkbox');
    mainCheckbox.addEventListener('change', function() {
        fieldCheckboxes.forEach(checkbox => {
            checkbox.checked = mainCheckbox.checked;
            toggleFields(checkbox, mainCheckbox.checked);
        });
    });

    fieldCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('click', function() {
            toggleFields(checkbox, checkbox.checked);
            console.log(`Field checkbox ${index + 1} state changed:`, checkbox.checked);
        });
    });

    function toggleFields(checkbox, isChecked) {
        const row = checkbox.closest('.label-2');
        const inputs = row.querySelectorAll('input:not(.cable_field-checkbox), select');
        inputs.forEach(input => {
            input.disabled = !isChecked;
        });
    }
});

// for Attendance Systen {*_*}
document.addEventListener('DOMContentLoaded', function() {
    const mainCheckbox = document.querySelector('.attendance-checkbox');
    const fieldCheckboxes = document.querySelectorAll('.attendance_field-checkbox');
    mainCheckbox.addEventListener('change', function() {
        fieldCheckboxes.forEach(checkbox => {
            checkbox.checked = mainCheckbox.checked;
            toggleFields(checkbox, mainCheckbox.checked);
        });
    });

    fieldCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('click', function() {
            toggleFields(checkbox, checkbox.checked);
            console.log(`Field checkbox ${index + 1} state changed:`, checkbox.checked);
        });
    });

    function toggleFields(checkbox, isChecked) {
        const row = checkbox.closest('.label-2');
        const inputs = row.querySelectorAll('input:not(.attendance_field-checkbox), select');
        inputs.forEach(input => {
            input.disabled = !isChecked;
        });
    }
});


// for PA System [$-_-$]
document.addEventListener('DOMContentLoaded', function() {
    const mainCheckbox = document.querySelector('.paSystem-checkbox');
    const fieldCheckboxes = document.querySelectorAll('.paSystem_field-checkbox');
    mainCheckbox.addEventListener('change', function() {
        fieldCheckboxes.forEach(checkbox => {
            checkbox.checked = mainCheckbox.checked;
            toggleFields(checkbox, mainCheckbox.checked);
        });
    });

    fieldCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('click', function() {
            toggleFields(checkbox, checkbox.checked);
            console.log(`Field checkbox ${index + 1} state changed:`, checkbox.checked);
        });
    });

    function toggleFields(checkbox, isChecked) {
        const row = checkbox.closest('.label-2');
        const inputs = row.querySelectorAll('input:not(.paSystem_field-checkbox), select');
        inputs.forEach(input => {
            input.disabled = !isChecked;
        });
    }
});

// for E-Mail For All Department

document.addEventListener('DOMContentLoaded', function() {
    const mainCheckbox = document.querySelector('.mail-checkbox');
    const fieldCheckboxes = document.querySelectorAll('.mail_field-checkbox');
    mainCheckbox.addEventListener('change', function() {
        fieldCheckboxes.forEach(checkbox => {
            checkbox.checked = mainCheckbox.checked;
            toggleFields(checkbox, mainCheckbox.checked);
        });
    });

    fieldCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('click', function() {
            toggleFields(checkbox, checkbox.checked);
            console.log(`Field checkbox ${index + 1} state changed:`, checkbox.checked);
        });
    });

    function toggleFields(checkbox, isChecked) {
        const row = checkbox.closest('.label-2');
        const inputs = row.querySelectorAll('input:not(.mail_field-checkbox), select');
        inputs.forEach(input => {
            input.disabled = !isChecked;
        });
    }
});


// for Computer Security 

document.addEventListener('DOMContentLoaded', function() {
    const mainCheckbox = document.querySelector('.security-checkbox');
    const fieldCheckboxes = document.querySelectorAll('.security_field-checkbox');
    mainCheckbox.addEventListener('change', function() {
        fieldCheckboxes.forEach(checkbox => {
            checkbox.checked = mainCheckbox.checked;
            toggleFields(checkbox, mainCheckbox.checked);
        });
    });

    fieldCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('click', function() {
            toggleFields(checkbox, checkbox.checked);
            console.log(`Field checkbox ${index + 1} state changed:`, checkbox.checked);
        });
    });

    function toggleFields(checkbox, isChecked) {
        const row = checkbox.closest('.label-2');
        const inputs = row.querySelectorAll('input:not(.security_field-checkbox), select');
        inputs.forEach(input => {
            input.disabled = !isChecked;
        });
    }
});
